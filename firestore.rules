rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users collection - users can read/write their own profile
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && isOwner(userId);
    }
    
    // Conversations - users can only access conversations they're members of
    match /conversations/{conversationId} {
      allow read: if isSignedIn() && 
        request.auth.uid in resource.data.memberIds;
      
      allow create: if isSignedIn() && 
        request.auth.uid in request.resource.data.memberIds;
      
      allow update: if isSignedIn() && 
        request.auth.uid in resource.data.memberIds;
      
      allow delete: if false; // Don't allow deleting conversations
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read: if isSignedIn() && 
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.memberIds;
        
        allow create: if isSignedIn() && 
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.memberIds &&
          request.resource.data.senderId == request.auth.uid;
        
        allow update: if isSignedIn() && 
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.memberIds;
        
        allow delete: if false; // Don't allow deleting messages
      }
    }
    
    // Typing indicators in RTDB - handled by Realtime Database rules
    // Presence in RTDB - handled by Realtime Database rules
  }
}